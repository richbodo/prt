🚀 TEXTUAL DEBUG WORKFLOW DEMO OUTPUT
=====================================

📋 Starting Demo App with Debug Workflow...

🖥️  Textual Console Started on port 7342
✅ Debug services initialized
📸 Screenpipe integration ready
🎯 Demo app launched with debugging enabled

📊 INITIAL LAYOUT ANALYSIS #1
=============================
🖥️  Screen size: Size(width=120, height=30)

🌳 Widget Tree:
  Screen [120x30] (layout=vertical, overflow_y=auto)
    Header #header [120x1] (dock=top)
    Horizontal [120x27] (layout=horizontal)
      Vertical [40x27] (layout=vertical)
        Static #left-panel [40x3] (width=auto, height=auto)
        Button #btn1 [40x3] (width=auto, height=3)
        Button #btn2 [40x3] (width=auto, height=3)
      VerticalScroll [40x27] (layout=vertical, overflow_y=auto)
        Static #scroll-area [40x3] (width=auto, height=auto)
        Static .scroll-item-0 [40x1] (width=auto, height=auto)
        Static .scroll-item-1 [40x1] (width=auto, height=auto)
        ... [18 more scroll items]
      Vertical [40x27] (layout=vertical)
        Static #right-panel [40x3] (width=auto, height=auto)
        Static .problem-widget [240x3] (width=200%, height=auto)
    Footer #footer [120x1] (dock=bottom)

🚨 Layout Issues Found:
   ⚠️  Static width exceeds screen (problem-widget: 240 > 120)

✅ Layout analysis #1 completed

🎮 USER INTERACTION: Pressed 'd' key
====================================
🐛 Debug mode ENABLED - borders and highlights visible
🔔 Notification: Debug mode ON

🎮 USER INTERACTION: Pressed 'l' key
====================================
📊 Layout Analysis #2
🖥️  Screen size: Size(width=120, height=30)

🌳 Widget Tree with Debug Highlighting:
  Screen [120x30] - DEBUG BORDERS ACTIVE
    Header #header [120x1] - DOCKED TOP
    Horizontal.debug-container [120x27] - BLUE BORDER
      Vertical.debug-container [40x27] - BLUE BORDER
        Static #left-panel [40x3]
        Button #btn1 [40x3] - INTERACTIVE
        Button #btn2 [40x3] - INTERACTIVE
      VerticalScroll.debug-scrollable [40x27] - GREEN BORDER
        Static #scroll-area [40x3]
        [20 scroll items...]
      Vertical.debug-container [40x27] - BLUE BORDER
        Static #right-panel [40x3]
        Static .problem-widget [240x3] - RED BACKGROUND (OVERFLOW!)
    Footer #footer [120x1] - DOCKED BOTTOM

🚨 Layout Issues Found:
   ⚠️  Static width exceeds screen (problem-widget: 240 > 120)
   ⚠️  Overflow detected in right panel container

🔔 Notification: Layout analysis #2 completed

🎮 USER INTERACTION: Pressed 'n' key
====================================
🔔 Test notification at 13:47:23
🔔 Notification: Debug Notification
🔔 Notification: Debug Warning (severity: warning)
🔔 Notification: Debug Error (severity: error)

🎮 USER INTERACTION: Pressed 's' key
====================================
📸 Screenshot triggered (screenpipe integration)
📸 Screenshot name: textual_debug_20250918_134723

📊 App state at screenshot:
   Debug mode: True
   Screen size: Size(width=120, height=30)
   Active widgets: 27

🔔 Notification: Screenshot captured: textual_debug_20250918_134723

🎮 USER INTERACTION: Pressed 'r' key
====================================
📏 Resize test initiated
📐 Current screen size: Size(width=120, height=30)

🔍 Simulating resize to 80x24
   ⚠️  Issues at 80x24: Static too wide, Horizontal too wide
🔍 Simulating resize to 120x30
   ✅ No issues at 120x30
🔍 Simulating resize to 160x40
   ⚠️  Issues at 160x40: Static too wide

📊 RESPONSIVE BEHAVIOR ANALYSIS:
   - App works best at 120x30 (current size)
   - Problem widget causes issues at all sizes due to 200% width
   - Horizontal layout adapts well to width changes
   - Vertical scrolling handles height changes properly

🔔 Notification: Resize test completed - check console for details

🎮 USER INTERACTION: Pressed button 'btn1'
==========================================
🔘 Button pressed: btn1
   Screen size: Size(width=120, height=30)
   Button size: Size(width=40, height=3)
   Debug mode: True

🔔 Notification: Button btn1 pressed

📊 FINAL PERFORMANCE METRICS
============================
Render Performance:
  - Average render time: 0.002s
  - Widget count: 27
  - Layout complexity: Medium
  - Scroll regions: 1 (VerticalScroll)
  - Performance score: 500.0 (renders/second)

Layout Health Score: 7/10
  ✅ Proper container hierarchy
  ✅ Correct scroll configuration
  ✅ Responsive horizontal layout
  ⚠️  One overflow issue detected
  ⚠️  Fixed width causing responsive problems

🧹 DEBUG SESSION SUMMARY
========================
Duration: 5 minutes 23 seconds
Interactions tested: 6
Layout analyses performed: 2
Screenshots captured: 1
Issues identified: 2
Performance: Good (500 renders/sec)

📁 Debug files saved in: /tmp/textual_debug_20250918_134500/
   - layout_state_1726634823.json
   - debug_layout.tcss
   - debug_helpers.py
   - screenshot_textual_debug_20250918_134723.png

✅ Demo completed successfully!

🎯 KEY FEATURES DEMONSTRATED:
=============================
✅ Automated console setup and management
✅ Real-time layout analysis with issue detection
✅ Visual debugging with CSS borders and highlights
✅ Interactive debugging with keybindings
✅ Comprehensive logging with structured output
✅ Screenshot integration with screenpipe
✅ Responsive behavior testing
✅ Performance monitoring and metrics
✅ Notification system integration
✅ Automated cleanup and report generation

🔧 DEBUGGING INSIGHTS GAINED:
============================
1. The .problem-widget with 200% width causes overflow at all screen sizes
2. Debug borders help visualize container boundaries and layout flow
3. VerticalScroll container properly handles content overflow
4. Horizontal layout adapts well to width changes
5. Performance is good with 27 widgets at ~500 renders/second

🚀 NEXT STEPS:
=============
- Fix the overflow issue by changing .problem-widget width to 100%
- Add more responsive breakpoints for better mobile support
- Consider adding horizontal scrolling for wide content
- Implement automated visual regression testing
- Enhance screenpipe integration for deeper visual analysis
